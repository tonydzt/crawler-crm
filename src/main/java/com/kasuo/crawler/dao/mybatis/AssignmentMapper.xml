<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kasuo.crawler.dao.mybatis.AssignmentDao">

    <resultMap id="resultMap" type="com.kasuo.crawler.domain.Assignment">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <id property="key" column="key" jdbcType="VARCHAR"/>
        <id property="value" column="value" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="assignResultMap" type="com.kasuo.crawler.domain.vo.AssignVo">
        <id property="date" column="date" jdbcType="VARCHAR"/>
        <id property="num" column="num" jdbcType="INTEGER"/>
        <id property="mobileNum" column="mobile_num" jdbcType="INTEGER"/>
        <id property="telNum" column="tel_num" jdbcType="INTEGER"/>
        <id property="totalNum" column="total_num" jdbcType="INTEGER"/>
        <id property="assignNum" column="assign_num" jdbcType="INTEGER"/>
        <id property="unassignNum" column="unassign_num" jdbcType="INTEGER"/>
    </resultMap>

    <select id="findByOrgIdAndDate" resultMap="resultMap" parameterType="int">
        SELECT
        id, org_id, trademark, registration_no
        FROM
        assignment
        <where>
            org_id=#{orgId} and `date`=#{date}
        </where>
    </select>

    <insert id="insert" parameterType="com.kasuo.crawler.domain.Assignment" useGeneratedKeys="true" keyProperty="id">
        INSERT ignore INTO
            assignment (org_id, applicant, contact, address, trademark, registration_no, `date`, category, assignment_name, legal_person, is_again)
        VALUES
        (#{orgId}, #{applicant}, #{contact}, #{address}, #{trademark}, #{registrationNo}, #{date}, #{category}, #{assignmentName}, #{legalPerson}, #{isAgain})
    </insert>

    <update id="update">
        UPDATE assignment
        <set >
            <if test="registrationNo != null">registration_no=#{registrationNo},</if>
            <if test="trademark != null">trademark=#{trademark},</if>
        </set>
        <where>
            `id`=#{id}
        </where>
    </update>

    <select id="countByDate" resultType="int">
        SELECT
        count(1)
        FROM
        assignment
        <where>
            date=#{date}
        </where>
    </select>

    <select id="countGroup" resultType="int">
        SELECT COUNT(*) FROM
            (SELECT `date`, count(*) num, count(mobile_num) mobile_num, count(tel_num) tel_num, (count(mobile_num) + count(tel_num)) total_num,
                                    count(assignment_name is not null or null) assign_num, count(assignment_name is null or null) unassign_num
             FROM assignment GROUP BY `date`) n;
    </select>

    <select id="findPage" resultMap="assignResultMap">
        SELECT `date`, num, mobile_num, tel_num, total_num, assign_num, unassign_num FROM
            (SELECT `date`, count(*) num, count(mobile_num) mobile_num, count(tel_num) tel_num, (count(mobile_num) + count(tel_num)) total_num,
                                    count(assignment_name is not null or null) assign_num, count(assignment_name is null or null) unassign_num
             FROM assignment
                 <if test="province.length() > 0">
                     where address LIKE '${province}%'
                 </if>

             GROUP BY `date`) n ORDER BY `date` DESC limit #{pageNo}, #{pageNum};
    </select>
</mapper>